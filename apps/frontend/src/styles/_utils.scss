@use 'sass:color' as color;
@use 'fonts' as fonts;

/// Get RGB components of color
///
/// @param { color } $color color
/// @returns { string } color represented in string `rrr ggg bbb`
@function _css-var($color) {
    $red: color.red($color);
    $green: color.green($color);
    $blue: color.blue($color);

    @return '#{$red}, #{$green}, #{$blue}';
}

/// Mixin for register color by its name
/// Register --c-$name color with color RGB values
///
/// @example
/// :root {
///     @include _register-color('lorem', #FFFFFF)
///     // Register `--c-lorem` css variable equals `255, 255, 255`
/// }
///
/// @param { string } $name css variable name
/// @param { color } $color css variable color
@mixin _register-color($name, $color) {
    --c-#{'' + $name}: #{_css-var($color)};
}

/// Mixin for register colors from colors-map
///
/// @param { Map<string, color> } $colors-map map with colors
@mixin register-colors($colors-map) {
    @each $name, $color in $colors-map {
        @include _register-color($name, $color);
    }
}

/// Path to font by its name
///
/// @param { string } $font-family font name
/// @param { string } $format font format (default `woft`)
/// @param { string } $base-fonts-path path for fonts (default `/fonts`)
/// @return path to font
@function _get-font-path($font-family, $format: 'woff', $base-fonts-path: '/fonts') {
    @return '#{$base-fonts-path}/#{$font-family}.#{$format}';
}

/// Register font by it's name, style and weight
///
/// @param { string } $font-family
/// @param { string } $font-style
/// @param { number } $font-weight
@mixin _register-font($font-family, $font-style, $font-weight-name: variable) {
    $font-path: _get-font-path('#{$font-family}/#{$font-weight-name}-#{$font-style}');

    $font-weight: map-get(fonts.$FONT_WEIGHTS, $font-weight-name);

    @font-face {
        font-family: $font-family;
        font-style: $font-style;
        font-weight: $font-weight;
        src: local($font-family), url($font-path) format(woff);
    }
}

/// Register fonts from map
///
/// @param { Map<string, Map<string, List<string>>> } $fonts-map map contains font-family with styles and list of weights
@mixin register-fonts($fonts-map) {
    @each $font-family, $styles in $fonts-map {
        @each $font-style, $weights in $styles {
            @if ($weights == variable) {
                @include _register-font($font-family, $font-style);
            } @else {
                @each $font-weight-name in $weights {
                    @include _register-font(
                        $font-family,
                        $font-style,
                        $font-weight-name
                    );
                }
            }
        }
    }
}
